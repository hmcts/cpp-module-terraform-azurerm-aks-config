rules:
  default: true
  custom:
    - seriesQuery: istio_requests_total{destination_service_name!="",reporter="destination", destination_workload_namespace!=""}
      resources:
        overrides:
          destination_service_name: { resource: "service" }
          destination_workload_namespace: { resource: "namespace" }
      name:
        matches: "^^(.*)_total"
        as: "$${1}_per_second"
      metricsQuery: 'sum(rate(<<.Series>>{reporter="destination", <<.LabelMatchers>>}[1m]) or clamp_max(absent(istio_requests_total{reporter="destination", <<.LabelMatchers>>}),0)) by (<<.GroupBy>>)'
image:
  repository: "${acr_name}.azurecr.io/registry.k8s.io/prometheus-adapter/prometheus-adapter"
