---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: istio-ingressgateway-mgmt
  namespace: istio-ingress
spec:
  selector:
    istio: ingressgateway-mgmt
  servers:
  - hosts:
    - "${istio_ingress_mgmt_domain}"
    port:
      name: http
      number: 80
      protocol: HTTP
    tls:
      httpsRedirect: true # sends 301 redirect for http requests
  - hosts:
    - "${istio_ingress_mgmt_domain}"
    port:
      name: https
      number: 443
      protocol: HTTPS
    tls:
      credentialName: ${istio_gateway_mgmt_cert_secret_name}
      mode: SIMPLE
      privateKey: sds
      serverCertificate: sds
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: istio-ingressgateway-apps
  namespace: istio-ingress
spec:
  selector:
    istio: ingressgateway-apps
  servers:
  - hosts:
    - "${istio_ingress_apps_domain}"
    port:
      name: http
      number: 80
      protocol: HTTP
    tls:
      httpsRedirect: true # sends 301 redirect for http requests
  - hosts:
    - "${istio_ingress_apps_domain}"
    port:
      name: https
      number: 443
      protocol: HTTPS
    tls:
      credentialName: ${istio_gateway_apps_cert_secret_name}
      mode: SIMPLE
      privateKey: sds
      serverCertificate: sds

---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: loop-control
  namespace: istio-ingress
spec:
  workloadSelector:
    labels:
      istio: ingressgateway-apps
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
       filterChain:
         filter:
           name: envoy.filters.network.http_connection_manager
           subFilter:
             name: envoy.filters.http.router
    patch:
      operation: INSERT_BEFORE
      value:
        name: loop-control
        typed_config:
          "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua"
          inlineCode: |
            function envoy_on_request(request_handle)
              if request_handle:headers():get("loop-control-${aks_cluster_name}") == "true" then
                request_handle:logWarn("loop-control-${aks_cluster_name} header present")
                request_handle:respond({[":status"] = "508"}, "Loop Detected")
              else 
                if request_handle:headers():get("loop-control-${aks_cluster_name}") == nil then
                  request_handle:headers():add("loop-control-${aks_cluster_name}", "true")
                end       
              end
            end